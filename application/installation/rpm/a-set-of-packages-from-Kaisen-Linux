#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: a-set-of-packages-from-Kaisen-Linux
## @Creation date file: 04.12.2021, 23:18:19

[[ -z "${a-set-of-packages-from-Kaisen-Linux_script_source}" ]] && declare -rx a-set-of-packages-from-Kaisen-Linux_script_source="$BASH_SOURCE"

if [[ -z "${a-set-of-packages-from-Kaisen-Linux_script_source_path}" ]]; then
  temp_one="$(dirname ${a-set-of-packages-from-Kaisen-Linux_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx a-set-of-packages-from-Kaisen-Linux_script_source_path="$(pwd)"
  else
    declare -rx a-set-of-packages-from-Kaisen-Linux_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)";
  printf "Script runs from path: %s\n" "${main_run_script_path}";
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1;
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../;
      else
        cd ${main_run_script_path};
        check=0;
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m";
        tput sgr0;
        exit 1;
      fi
    else
      check=0;
      declare -rx main_project_path="$(pwd)";
      . "${main_project_path}/main.cfg" "$@";
      cd "${main_run_script_path}";
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})";

function install_a-set-of-packages-from-Kaisen-Linux(){

  local install_pkg=(\
# Tools
#
# List of tools integrated into Kaisen Linux
# Maintenance tools
# Disks analysis
"e2fsprogs, baobab, bonnie++, diskscan, disktype, gpart, gsmartcontrol, hdparm, ioping, testdisk, ncdu, smartmontools, di, util-linux, util-linux-locales"
# Virus analysis
"chkrootkit, clamdscan, clamtk, rkhunter, clamassassin, clamav-base, clamav-daemon, clamav-docs, clamav-freshclam, clamav-milter, clamav-testfiles, clamfs"
# Cloning
"clonezilla, dcfldd, fsarchiver, guymager, partclone, partimage"
#
# USB boot
"balena-etcher-electron, dcfldd"
# Hardware
"cpulimit, discover, discover-data, dmidecode, fio, hardinfo, hwinfo, iozone3, lshw, stress, stress-ng, stressant, lshw-gtk, flashbench, hw-probe, memtester, gfio, flashrom, inxi, cpu-x, sysstat"
#
# Outlook PST
"pffexport, pffinfo, pst2dii, pst2ldif"
# Password tools
"apg, bruteforce-luks, chntpw, cmospwd, crack, fcrackzip, hashcat, hydra, john, keepassxc, ophcrack, ophcrack-cli, pdfcrack, pwgen, rarcrack, rephrase, samdump2, hydra-gtk, crunch"
#
# Partitioning and delete tools
"dcfldd, fatresize, fdisk, gdisk, gparted, nwipe, parted, secure-delete, wipe, zerofree, bleachbit, scrub"
# Data protection
"fscrypt, lockfile-progs, zulucrypt-cli, zulucrypt-gui, zulumount-cli, zulumount-gui, veracrypt"
#
# Data recovery
"ddrescue-gui, ddrescueview, ddrutility, ext4magic, extundelete, foremost, ddrescue, gddrescue, testdisk, magicrescue, myrescue, recoverdm, recoverjpeg, safecopy, scalpel, scrounge-ntfs, hfsprescue"
# Temperature analysis
"hddtemp, xsensors, lm-sensors, psensor, psensor-common"
# Administrators tools
# DHCP
"isc-dhcp-client, isc-dhcp-common, dhcpdump, dhcping"
# DNS
"dnsenum, dnstop, mdns-scan, whois, dnsutils"
# Ethernet
# ethstatus, ethtool, packeth
# Firewalling
"iptables-persistent, iptstate"
#
# IP
"net-tools, ipcalc, sipcalc, iproute2, iptraf-ng, iptraf, ipv6calc, traceroute, iputils-tracepath"
# GNS3
# gns3-gui, gns3-server, dynamips, vpcs, ubridge, nvram_export
#
# MAC
"arp-scan, arpalert, iputils-arping, arptables, arpwatch, macchanger"
# Monitoring
"cbm, etherape, ifstat, iftop, iperf, iperf3, nethogs, netperfmeter, sockstat, tcpstat"
#
# PCAP
"darkstat, hunt, netsed, ngrep, pcapfix, scapy, tcpdump, tcpreplay, tcpxtract, tshark, wireshark"
#
# Console port
"cu, minicom, picocom, screen, setserial, statserial"
#
# Network scanners
"arp-scan, bettercap, bettercap-caplets, bettercap-ui, driftnet, dsniff, ettercap-graphical, hping3, lft, masscan, mitmproxy, mtr-tiny, nast, ndiff, netdiscover, netsniff-ng, net-tools, ncat, nmap, nmapsi4, scapy, python3-scapy, telnet, iputils-tracepath, traceroute"
#
# SSL/TLS
"ssldump, sslsniff, sslsplit, sslscan, sslyze"
#
# TCP/UDP
"netcat, netcat-openbsd, tcpreplay, tcpflow, tcptrace, tcptraceroute, packetsender, udpcast, dsniff"
#
# Wi-Fi
#
"aircrack-ng, hostapd, iw, rfkill"
#
# VPN
"openvpn, wireguard"
#
# Various network administrators tools
"2ping, atftp, cdpr, comgt, ndisc6, ntpdate, socat, ssmping, wakeonlan, wondershaper, ifenslave"
#
# Remote administration
"virt-viewer, rdesktop, grdesktop, freerdp2-x11, ssh, sshfs, pssh, clusterssh, tmux, zssh, remmina, remmina-plugin-exec, remmina-plugin-kwallet, remmina-plugin-spice, remmina-plugin-www"
#
# Backup tools
"dirvish, automysqlbackup, autopostgresqlbackup, bacula-bscan, bacula-client, bacula-common, bacula-common-sqlite3, bacula-console, bacula-console-qt, bacula-fd, bacula-sd, dump, duplicity, restic, rsbackup, rsync, backup2l, zsync, vbackup, duply, grsync, zbackup"
#
# FTP
"filezilla, gftp, lftp"
#
# Microsoft
"bloodhound, ldapdomaindump, cabextract, powershell"
#
# Virtualization
"virtualbox, virtualbox-qt, virtualbox-dkms, virtualbox-source, virtualbox-guest-additions-iso, virtualbox-ext-pack, virt-manager, qemu, qemu-system, qemu-system-x86, qemu-system-gui, qemu-efi, qemu-utils, libvirt-clients, libvirt-daemon-system, virtinst, virt-viewer"
#
# Various system administrators tools
"xca, krb5-config, krb5-pkinit, krb5-user, krb5-locales, ctop, apache2-utils, ssh-askpass, sshpass"
#
# Apparmor tools and profiles
#
# apparmor, apparmor-profiles, apparmor-profiles-extra, apparmor-notify, apparmor-utils
#
# Databases clients
"mariadb-client, etcd-client, postgresql-client"
#
# DevOps and Cloud
"vagrant, ansible, lxc, docker, docker-compose, docker.io, jmeter, kubectl, kubectl-convert, kubemark, awscli, packer, azure-cli, puppet, terraform, s3fs, eksctl, buildah, helm, k6, k9s, minikube, podman, trivy"
#
# System snapshots
"apt-btrfs-snapshot, btrbk, snapper, timeshift"
#
# Filesystems tools
"cryptsetup, dmraid, dmsetup, mdadm, lvm2, dosfstools, f2fs-tools, nilfs-tools, ocfs2-tools, btrfs-compsize, btrfs-heatmap, btrfs-progs, btrfsmaintenance, gfs2-utils, hfsplus, hfsprogs, hfsutils, hfsutils-tcltk, jfsutils, reiserfsprogs, vmfs-tools, xfsdump, xfsprogs, zfs-fuse, zfsnap, exfatprogs, exfat-fuse, ceph-fuse, fuse3, fuse-zip, fuseiso, squashfuse, glusterfs-client, udfclient, udftools, reiser4progs, vmfs6-tools, xmount, archivemount, tmfs, cifs-utils, apfs-fuse, apfsutil, ecryptfs-utils, libbde-utils, dislocker, libfvde-utils, libvhdi-utils, libvmdk-utils, libfsntfs-utils"
#
# Miscellaneous tools
"progress, pv, less, mlocate, dirmngr, gpg, gnupg2, curl, wget, git, gpg-agent, neofetch, git-repair, img2pdf, mc, strace, yamllint, ltrace, irqbalance, tree, vim, codium, cups, hexedit, dstat, file, memstat, psmisc, htop, qtop, lsof, rdfind, fdupes, lzop, p7zip-full, pigz, unp, unar, unrar-free, unzip, zip, bzip2, tar, unrar, zstd, gtkhash"
#
# Integrated firmwares
"firmware-amd-graphics, firmware-ast, firmware-ath9k-htc, firmware-atheros, firmware-b43-installer, firmware-bnx2, firmware-bnx2x, firmware-brcm80211, firmware-cavium, firmware-intel-sound, firmware-intelwimax, firmware-ipw2x00, firmware-ivtv, firmware-iwlwifi, firmware-libertas, firmware-linux, firmware-linux-free, firmware-linux-nonfree, firmware-microbit-micropython, firmware-misc-nonfree, firmware-myricom, firmware-netronome, firmware-netxen, firmware-qcom-media, firmware-qcom-soc, firmware-qlogic, firmware-realtek, firmware-samsung, firmware-siano, firmware-sof-signed, firmware-ti-connectivity, firmware-tomu, firmware-zd1211, bluetooth, blueman, bluez-tools, bluez-firmware, alsa-firmware-loaders, atmel-firmware"
);


  printf '%s\n' $(unset_dupes_in_array "$(echo ${install_pkg[@]} | sed 's/,//mg)") | sort -o "${main_project_path}/package-list/a-set-of-packages-from-Kaisen-Linux.txt"
  printf '%s\n' please visit link of https://kaisenlinux.org/documentation/tools.html#content"
  pm  "$@" -- "$(echo ${install_pkg[@]} | sed 's/,//mg')"

}

function main_a-set-of-packages-from-Kaisen-Linux_script_source(){

  # printf "Initialise main function of a-set-of-packages-from-Kaisen-Linux script source\n";

  install_a-set-of-packages-from-Kaisen-Linux "$@"

}

main_a-set-of-packages-from-Kaisen-Linux_script_source "$@";
