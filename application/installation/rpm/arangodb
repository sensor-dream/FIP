#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: arangodb
## @Creation date file: 09.10.2020, 01:16:53

[[ -z "${arangodb_script_source}" ]] && declare -rx arangodb_script_source="$BASH_SOURCE"

if [[ -z "${arangodb_script_source_path}" ]]; then
  temp_one="$(dirname ${arangodb_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx arangodb_script_source_path="$(pwd)"
  else
    declare -rx arangodb_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function install_arangodb() {

  echo -e "\nPlease read at:\n\thttps://www.arangodb.com\n\thttps://www.arangodb.com/docs/stable/\n\thttps://www.arangodb.com/download-major/fedora/\n"

  [[ -z "${arangodb_pkg_version}" ]] && local arangodb_pkg_version='3.7.2-1.1'

  echo -e "\nArarngo Data Base version: ${arangodb_pkg_version}\n"

  if [[ -z "${arangodb_repo_version}" ]]; then
    local arangodb_repo_version="${arangodb_pkg_version::3}"
    arangodb_repo_version="${arangodb_repo_version//./}"
  fi
  [[ -z "${arangodb_name_version}" ]] && export arangodb_name_version="${arangodb_repo_version::1}"

  [[ -f /etc/yum.repos.d/arangodb.repo ]] || . "${main_project_path}/repository/arangodb"

  local install_pkg=(
    "arangodb${arangodb_name_version}-${arangodb_pkg_version}"
    # "arangodb${arangodb_name_version}-client-${arangodb_pkg_version}"
    "arangodb${arangodb_name_version}-debuginfo-${arangodb_pkg_version}"
    'numactl'
    'sysfsutils'
  )

  [[ "$(check_installed_packages arangodb${arangodb_name_version} numactl)" == "arangodb${arangodb_name_version} numactl" ]] || pm "$@" -- "${install_pkg[@]}"

}

function main_arangodb_script_source() {

  # prinf "Initialise main function of arangodb script source\n";

  install_arangodb "$@"

}

main_arangodb_script_source "$@"
