#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: gdb
## @Creation date file: 07.10.2020, 05:03:38

[[ -z "${gdb_script_source}" ]] && declare -rx gdb_script_source="$BASH_SOURCE"

if [[ -z "${gdb_script_source_path}" ]]; then
  temp_one="$(dirname ${gdb_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx gdb_script_source_path="$(pwd)"
  else
    declare -rx gdb_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function install_gdb() {

  local install_pkg=(
    # Краткое опис : A stub package for GNU source-level debugger
    # URL          : https://gnu.org/software/gdb/
    # Лицензия     : GPLv3+ and GPLv3+ with exceptions and GPLv2+ and GPLv2+ with exceptions and GPL+ and LGPLv2+ and LGPLv3+ and BSD and Public Domain and GFDL
    # Описание     : 'gdb' package is only a stub to install gcc-gdb-plugin for 'compile' commands.
    # : See package 'gdb-headless'.
    'gdb'
    'gdb-headless'
    'gdb-doc'
    'gdb-exploitable'
    'gdb-gdbserver'
    'gdb-minimal'
    'gcc-gdb-plugin'
  )

  printf '%s\n' $(unset_dupes_in_array "${install_pkg[@]}") | sort -o "${main_project_path}/package-list/gdb.txt"
  pm -f "$@" -- "${install_pkg[@]}"

}

function main_gdb_script_source() {

  # prinf "Initialise main function of gdb script source\n";

  install_gdb "$@"

}

main_gdb_script_source "$@"
