#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: media-pack
## @Creation date file: 11.11.2020, 22:49:51

[[ -z "${media_pack_script_source}" ]] && declare -rx media_pack_script_source="$BASH_SOURCE"

if [[ -z "${media_pack_script_source_path}" ]]; then
  temp_one="$(dirname ${media_pack_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx media_pack_script_source_path="$(pwd)"
  else
    declare -rx media_pack_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function install_media_pack() {

  local install_pkg=(
    'alsamixergui'
    # Краткое опис : Digital VCR and streaming server
    # URL : http://ffmpeg.org/
    # Описание : FFmpeg is a complete and free Internet live audio and video
    # : broadcasting solution for Linux/Unix. It also includes a digital
    # : VCR. It can encode in real time in many formats including MPEG1 audio
    # : and video, MPEG4, h263, ac3, asf, avi, real, mjpeg, and flash.
    'ffmpeg'
    'ffmpeg-libs'
    'ffmpeg-devel'
    # Репозиторий  : rpmfusion-free
    # Краткое опис : Special devices muxing/demuxing library
    # URL          : http://ffmpeg.org/
    # Лицензия     : GPLv2+
    # Описание     : Libavdevice is a complementary library to libavf "libavformat". It provides
    # : various "special" platform-specific muxers and demuxers, e.g. for grabbing
    # : devices, audio capture and playback etc.
    'libavdevice'
    #
    # Краткое опис : Lightweight video thumbnailer that can be used by file managers
    # URL : https://github.com/dirkvdb/ffmpegthumbnailer
    # Описание : This video thumbnailer can be used to create thumbnails for your video files.
    'ffmpegthumbnailer'
    'ffmpegthumbnailer-devel'
    #
    # Краткое опис : KDE ffmpegthumbnailer service
    # URL : https://projects.kde.org/projects/kde/kdemultimedia/ffmpegthumbs
    # Описание : KDE ffmpegthumbnailer service
    # -> 'ffmpegthumbs'
    #
    # Краткое опис : Movie player playing most video formats and DVDs
    # URL          : https://www.mplayerhq.hu/
    # Лицензия     : GPLv3+
    # Описание     : MPlayer is a movie player that plays most MPEG, VOB, AVI, OGG/OGM,
    # : VIVO, ASF/WMA/WMV, QT/MOV/MP4, FLI, RM, NuppelVideo, yuv4mpeg, FILM,
    # : RoQ, and PVA files. You can also use it to watch VCDs, SVCDs, DVDs,
    # : 3ivx, RealMedia, and DivX movies.
    # : It supports a wide range of output drivers including X11, XVideo, DGA,
    # : OpenGL, SVGAlib, fbdev, AAlib etc. There are also nice
    # : antialiased shaded subtitles and OSD.
    # : The following on-default rpmbuild options are available:
    # : --with samba:   Enable Samba (smb://) support
    # : --with xmms:    Enable XMMS input plugin support
    # : --with a52dec:  Enable a52dec support
    # : --without amr:  Disable AMR support
    # : --with dca:     Enable libdca support
    # : --with faac:    Enable FAAC support
    # : --with faad:    Enable FAAD support
    # : --with dv:      Enable libdv support
    # : --with libmad:  Enable libmad support
    # : --with libmpeg2:Enable libmpeg2 support
    # : --with libmpg123:Enable libmpg123 support
    # : --with openal:  Enable OpenAL support
    # : --with arts:    Enable aRts support
    # : --with esound:  Enable EsounD support
    # : --with dga:     Enable DGA support
    # : --with svgalib: Enable SVGAlib support
    'mplayer'
    'mplayer-common'
    'mplayer-gui'
    'mplayer-tools'
    #
    # Краткое опис : MPlayer movie encoder
    # URL          : https://www.mplayerhq.hu/
    # Лицензия     : GPLv3+
    # Описание     : This package contains the MPlayer movie encoder.
    'mencoder'
    #
    # Краткое опис : Music Player Daemon (MPD) graphical client
    #URL          : https://github.com/cdrummond/cantata
    # Лицензия     : GPLv2+
    # Описание     : Cantata is a graphical client for the music player daemon (MPD).
    # :
    # : Features:
    # : * Multiple MPD collections.
    # : * Highly customisable layout.
    # : * Songs grouped by album in play queue.
    # : * Context view to show artist, album, and song information of current track.
    # : * Simple tag editor.
    # : * File organizer - use tags to organize files and folders.
    # : * Ability to calculate ReplyGain tags.
    # : * Dynamic playlists.
    # : * Online services; Jamendo, Magnatune, SoundCloud, and Podcasts.
    # : * Radio stream support - with the ability to search for streams via TuneIn
    # : and ShoutCast.
    # : * USB-Mass-Storage and MTP device support.
    # : * Audio CD ripping and playback.
    # : * Playback of non-MPD songs, via simple in-built HTTP server.
    # : * MPRISv2 DBUS interface.
    # : * Support for KDE global shortcuts (KDE builds), GNOME media keys, and generic
    # : media keys (via Qxt support)
    # : * Ubuntu/ambiance theme integration.
    'cantata'
  )

  printf '%s\n' $(unset_dupes_in_array "${install_pkg[@]}") | sort -o "${main_project_path}/package-list/media-pack.txt"
  pm "$@" -- "${install_pkg[@]}"

}

function main_media_pack_script_source() {

  # printf "Initialise main function of media-pack script source\n";
  . "${main_project_path}/application/installation/rpm/library/alsa"
  . "${main_project_path}/application/installation/rpm/library/gstreamer1"
  # . "${main_project_path}/application/installation/rpm/library/gstreamermm"
  . "${main_project_path}/application/installation/rpm/pulseaudio"

  install_media_pack "$@"

}

main_media_pack_script_source "$@"
