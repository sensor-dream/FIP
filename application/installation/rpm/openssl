#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: openssl
## @Creation date file: 11.12.2020, 06:32:44

[[ -z "${openssl_script_source}" ]] && declare -rx openssl_script_source="$BASH_SOURCE"

if [[ -z "${openssl_script_source_path}" ]]; then
  temp_one="$(dirname ${openssl_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx openssl_script_source_path="$(pwd)"
  else
    declare -rx openssl_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function install_openssl() {

  local install_pkg=(
    # Имя          : openssl
    # Эпоха        : 1
    # Репозиторий  : @System
    # Из репозитор : updates
    # Краткое опис : Utilities from the general purpose cryptography library with TLS implementation
    # URL          : http://www.openssl.org/
    # Лицензия     : OpenSSL and ASL 2.0
    # Описание     : The OpenSSL toolkit provides support for secure communications between
    #              : machines. OpenSSL includes a certificate management tool and shared
    #              : libraries which provide various cryptographic algorithms and
    #              : protocols.
    'openssl'
    'openssl-devel'
    'openssl-libs'
    'openssl-pkcs11'
    'openssl-gost-engine'
    'openssl-ibmpkcs11'
    'openssl-perl'
    'openssl-static'
    'opencryptoki-libs'
    'apr-util-openssl'
    'compat-openssl10'
    'rubygem-openssl'
    'xmlsec1-openssl'
  )

  printf '%s\n' $(unset_dupes_in_array "${install_pkg[@]}") | sort -o "${main_project_path}/package-list/openssl.txt"
  pm "$@" -- "${install_pkg[@]}"

}

function main_openssl_script_source() {

  # printf "Initialise main function of openssl script source\n";

  install_openssl "$@"

}

main_openssl_script_source "$@"
