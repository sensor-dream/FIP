#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: plank
## @Creation date file: 11.12.2020, 05:48:47

[[ -z "${plank_script_source}" ]] && declare -rx plank_script_source="$BASH_SOURCE"

if [[ -z "${plank_script_source_path}" ]]; then
  temp_one="$(dirname ${plank_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx plank_script_source_path="$(pwd)"
  else
    declare -rx plank_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function install_plank() {

  local install_pkg=(
    # Имя          : plank
    # Репозиторий  : fedora
    # Краткое опис : Stupidly simple Dock
    # URL          : https://launchpad.net/plank
    # Лицензия     : GPLv3+
    # Описание     : Plank is meant to be the simplest dock on the planet. The goal is to
    #              : provide just what a dock needs and absolutely nothing more. It is,
    #              : however, a library which can be extended to create other dock programs
    #              : with more advanced features.
    #              :
    #              : Thus, Plank is the underlying technology for Docky (starting in version
    #              : 3.0.0) and aims to provide all the core features while Docky extends it
    #              : to add fancier things like Docklets, painters, settings dialogs, etc.
    'plank'
    'plank-devel'
    'plank-docklets'
  )

  printf '%s\n' $(unset_dupes_in_array "${install_pkg[@]}") | sort -o "${main_project_path}/package-list/plank.txt"
  pm "$@" -- "${install_pkg[@]}"

}

function main_plank_script_source() {

  # printf "Initialise main function of plank script source\n";

  install_plank "$@"

}

main_plank_script_source "$@"
