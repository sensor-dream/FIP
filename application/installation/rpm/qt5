#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: qt5
## @Creation date file: 07.10.2020, 04:27:36

[[ -z "${qt5_script_source}" ]] && declare -rx qt5_script_source="$BASH_SOURCE"

if [[ -z "${qt5_script_source_path}" ]]; then
  temp_one="$(dirname ${qt5_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx qt5_script_source_path="$(pwd)"
  else
    declare -rx qt5_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function install_qt5() {

  local install_pkg=(
    'qt5-assistant'
    'qt5-doc'
    'qt5-qdbusviewer'
    'qt5-qt3d'
    'qt5-qtbase'
    'qt5-qtbase-common'
    'qt5-qtbase-devel'
    'qt5-qtbase-gui'
    'qt5-qtbase-mysql'
    'qt5-qtbase-postgresql'
    'qt5-qtcharts'
    'qt5-qtconnectivity'
    'qt5-qtdeclarative'
    'qt5-qtdoc'
    'qt5-qtgraphicaleffects'
    'qt5-qtimageformats'
    'qt5-qtlocation'
    'qt5-qtmultimedia'
    'qt5-qtquickcontrols'
    'qt5-qtquickcontrols2'
    'qt5-qtremoteobjects'
    'qt5-qtscript'
    'qt5-qtscxml'
    'qt5-qtsensors'
    'qt5-qtserialport'
    'qt5-qtspeech'
    'qt5-qtspeech-speechd'
    'qt5-qtsvg'
    'qt5-qtsvg-devel'
    'qt5-qtsvg-doc'
    'qt5-qtsvg-examples'
    'qt5-qttools'
    'qt5-qttools-common'
    'qt5-qttools-libs-designer'
    'qt5-qttools-libs-designercomponents'
    'qt5-qttools-libs-help'
    'qt5-qtwayland'
    'qt5-qtwebchannel'
    'qt5-qtwebengine'
    'qt5-qtwebkit'
    'qt5-qtwebsockets'
    'qt5-qtx11extras'
    'qt5-qtxmlpatterns'
    'qt5-rpm-macros'
    'qt5-srpm-macros'
    'qt5-qt3d-devel'
    'qt5-qt3d-doc'
    'qt5-qt3d-examples'
    'qt5-qtaccountsservice'
    'qt5-qtaccountsservice-devel'
    'qt5-qtbase-doc'
    'qt5-qtbase-examples'
    'qt5-qtbase-ibase'
    'qt5-qtbase-odbc'
    'qt5-qtbase-private-devel'
    'qt5-qtbase-static'
    'qt5-qtbase-tds'
    'qt5-qtcanvas3d-examples'
    'qt5-qtcharts-devel'
    'qt5-qtcharts-doc'
    'qt5-qtcharts-examples'
    'qt5-qtconfiguration'
    'qt5-qtconfiguration-devel'
    'qt5-qtconnectivity-devel'
    'qt5-qtconnectivity-doc'
    'qt5-qtconnectivity-examples'
    'qt5-qtdatavis3d-devel'
    'qt5-qtdatavis3d-doc'
    'qt5-qtdatavis3d-examples'
    'qt5-qtdeclarative-devel'
    'qt5-qtdeclarative-doc'
    'qt5-qtdeclarative-examples'
    'qt5-qtdeclarative-static'
    'qt5-qtenginio-devel'
    'qt5-qtenginio-doc'
    'qt5-qtenginio-examples'
    'qt5-qtgamepad-devel'
    'qt5-qtgamepad-doc'
    'qt5-qtgamepad-examples'
    'qt5-qtgraphicaleffects-doc'
    'qt5-qtimageformats-doc'
    'qt5-qtlocation-devel'
    'qt5-qtlocation-doc'
    'qt5-qtlocation-examples'
    'qt5-qtmultimedia-devel'
    'qt5-qtmultimedia-doc'
    'qt5-qtmultimedia-examples'
    'qt5-qtnetworkauth-devel'
    'qt5-qtnetworkauth-examples'
    'qt5-qtpbfimageformat'
    'qt5-qtpurchasing-doc'
    'qt5-qtquickcontrols-doc'
    'qt5-qtquickcontrols-examples'
    'qt5-qtquickcontrols2-devel'
    'qt5-qtquickcontrols2-doc'
    'qt5-qtquickcontrols2-examples'
    'qt5-qtremoteobjects-devel'
    'qt5-qtremoteobjects-doc'
    'qt5-qtremoteobjects-examples'
    'qt5-qtscript-devel'
    'qt5-qtscript-doc'
    'qt5-qtscript-examples'
    'qt5-qtscxml-devel'
    'qt5-qtscxml-doc'
    'qt5-qtscxml-examples'
    'qt5-qtsensors-devel'
    'qt5-qtsensors-doc'
    'qt5-qtsensors-examples'
    'qt5-qtserialbus-devel'
    'qt5-qtserialbus-doc'
    'qt5-qtserialbus-examples'
    'qt5-qtserialport-devel'
    'qt5-qtserialport-doc'
    'qt5-qtserialport-examples'
    'qt5-qtspeech-devel'
    'qt5-qtspeech-doc'
    'qt5-qtspeech-examples'
    'qt5-qtstyleplugins'
    'qt5-qttools-devel'
    'qt5-qttools-doc'
    'qt5-qttools-examples'
    'qt5-qttools-static'
    'qt5-qttranslations'
    'qt5-qtvirtualkeyboard-devel'
    'qt5-qtvirtualkeyboard-doc'
    'qt5-qtvirtualkeyboard-examples'
    'qt5-qtwayland-devel'
    'qt5-qtwayland-doc'
    'qt5-qtwayland-examples'
    'qt5-qtwebchannel-devel'
    'qt5-qtwebchannel-doc'
    'qt5-qtwebchannel-examples'
    'qt5-qtwebengine-devel'
    'qt5-qtwebengine-devtools'
    'qt5-qtwebengine-doc'
    'qt5-qtwebengine-examples'
    'qt5-qtwebengine-freeworld'
    'qt5-qtwebkit-devel'
    'qt5-qtwebsockets-devel'
    'qt5-qtwebsockets-doc'
    'qt5-qtwebsockets-examples'
    'qt5-qtwebview-devel'
    'qt5-qtwebview-doc'
    'qt5-qtwebview-examples'
    'qt5-qtx11extras-devel'
    'qt5-qtx11extras-doc'
    'qt5-qtxmlpatterns-devel'
    'qt5-qtxmlpatterns-doc'
    'qt5-qtxmlpatterns-examples'
    'qt5-style-oxygen'
    'qt5ct'
    'qt5pas'
    'qt5pas-devel'
    'qt5-designer'
    'qt5-doctools'
    'qt5-linguist'
    'qt5-qtcanvas3d'
    'qt5-qtdatavis3d'
    'qt5-qtenginio'
    'qt5-qtgamepad'
    'qt5-qtnetworkauth'
    'qt5-qtserialbus'
    'qt5-qtvirtualkeyboard'
    'qt5-qtwebview'
    'PackageKit-Qt5'
    'qt-creator-data'
    'qt-creator'
    'qt-devel'
    'quazip-qt5-devel'
  )

  [[ -d "${main_project_path}/package-list" ]] || mkdir -p "${main_project_path}/package-list"
  printf '%s\n' $(unset_dupes_in_array "${install_pkg[@]}") | sort >"${main_project_path}/package-list/qt5.txt"
  pm "$@" -- "${install_pkg[@]}"

}

function main_qt5_script_source() {

  # prinf "Initialise main function of qt5 script source\n";

  install_qt5 "$@"

}

main_qt5_script_source "$@"
