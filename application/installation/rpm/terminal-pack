#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: terminal-pack
## @Creation date file: 11.11.2020, 16:31:42

[[ -z "${terminal_pack_script_source}" ]] && declare -rx terminal_pack_script_source="$BASH_SOURCE"

if [[ -z "${terminal_pack_script_source_path}" ]]; then
  temp_one="$(dirname ${terminal_pack_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx terminal_pack_script_source_path="$(pwd)"
  else
    declare -rx terminal_pack_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function install_terminal_pack() {

  local install_pkg=(
    # Краткое опис : Drop-down terminal for GNOME
    # URL          : http://guake-project.org/
    # Описание     : Guake is a dropdown terminal made for the GNOME desktop environment. Guake's
    # : style of window is based on an FPS game, and one of its goals is to be easy to
    # : reach.
    'guake'
    # !!! ->
    # REQUIRED FOR KRUSADER
    # Краткое опис : KDE Terminal emulator
    # URL          : http://www.kde.org/applications/system/konsole/
    # Описание     : KDE Terminal emulator.
    # 'konsole5'
    # <- !!!
    #
    # Краткое опис : Terminal emulator mimicking a CRT display
    # URL          : https://github.com/Swordfish90/cool-retro-term
    # Описание     : cool-retro-term is a terminal emulator which tries to mimic the look and feel
    # : of the old cathode tube screens. It has been designed to be eye-candy,
    # : customizable, and reasonably lightweight.
    # 'cool-retro-term'
    #
    # Имя          : tilda
    # Репозиторий  : @System
    # Из репозитор : fedora
    # Краткое опис : A Gtk based drop down terminal for Linux and Unix
    # URL          : http://github.com/lanoxx/tilda
    # Лицензия     : GPLv2 and MIT
    # Описание     : Tilda is a Linux terminal taking after the likeness of many classic terminals
    # : from first person shooter games, Quake, Doom and Half-Life (to name a few),
    # : where the terminal has no border and is hidden from the desktop until a key is
    # : pressed.
    # 'tilda'

  )

  printf '%s\n' $(unset_dupes_in_array "${install_pkg[@]}") | sort >"${main_project_path}/package-list/terminal-pack.txt"
  pm "$@" -- "${install_pkg[@]}"

}

function main_terminal_pack_script_source() {

  # printf "Initialise main function of terminal-pack script source\n";

  install_terminal_pack "$@"

}

main_terminal_pack_script_source "$@"
