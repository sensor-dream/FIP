#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: tigervnc
## @Creation date file: 12.11.2020, 23:34:59

[[ -z "${tigervnc_script_source}" ]] && declare -rx tigervnc_script_source="$BASH_SOURCE"

if [[ -z "${tigervnc_script_source_path}" ]]; then
  temp_one="$(dirname ${tigervnc_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx tigervnc_script_source_path="$(pwd)"
  else
    declare -rx tigervnc_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function install_tigervnc() {

  local install_pkg=(
    # Краткое опис : A TigerVNC remote display system
    # URL          : http://www.tigervnc.com
    # Лицензия     : GPLv2+
    # Описание     : Virtual Network Computing (VNC) is a remote display system which
    # : allows you to view a computing 'desktop' environment not only on the
    # : machine where it is running, but from anywhere on the Internet and
    # : from a wide variety of machine architectures.  This package contains a
    # : client which will allow you to connect to other desktops running a VNC
    # : server.
    'tigervnc'
    'tigervnc-icons'
    'tigervnc-license'
    'tigervnc-selinux'
    # Краткое опис : A TigerVNC server
    # URL          : http://www.tigervnc.com
    # Лицензия     : GPLv2+
    # Описание     : The VNC system allows you to access the same desktop from a wide
    # : variety of platforms.  This package includes set of utilities
    # : which make usage of TigerVNC server more user friendly. It also
    # : contains x0vncserver program which can export your active
    # : X session.
    'tigervnc-server'
    'tigervnc-server-module'
    # Краткое опис : A minimal installation of TigerVNC server
    # URL : http://www.tigervnc.com
    # Лицензия : GPLv2+
    # Описание : The VNC system allows you to access the same desktop from a wide
    #: variety of platforms. This package contains minimal installation
    # : of TigerVNC server, allowing others to access the desktop on your
    # : machine.
    'tigervnc-server-minimal'
  )

  printf '%s\n' $(unset_dupes_in_array "${install_pkg[@]}") | sort >"${main_project_path}/package-list/tigervnc.txt"
  pm "$@" -- "${install_pkg[@]}"

}

function main_tigervnc_script_source() {

  # printf "Initialise main function of tigervnc script source\n";

  install_tigervnc "$@"

}

main_tigervnc_script_source "$@"
