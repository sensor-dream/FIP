#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: generate
## @Creation date file: 17.09.2020, 18:30:58

declare -rx generate_script_source="$BASH_SOURCE"

temp_one="$(dirname ${generate_script_source})"
if [[ "${temp_one}" == '.' ]]; then
  declare -rx generate_script_source_path="$(pwd)"
else
  declare -rx generate_script_source_path="${temp_one}"
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function generate_wildcard_certificate_for_main_domain() {

  local test=
  local domain=
  local letsencrypt_rsa_key_size=2048
  local vildcard=
  local flag_vildcard=1

  OPTIND=1

  while getopts "d:tn" OPT; do
    case $OPT in
    d) domain="$OPTARG" ;;
    # --test-cert or --staging
    t) test='--staging' ;;
    n) flag_vildcard=0 ;;
    *) ;;
    esac
  done
  shift $(($OPTIND - 1))
  # shift `expr $OPTIND - 1`
  # [ "${1:-}" = "--" ] && shift

  # echo "${cfg_docfg}"
  # exit

  [[ -z ${domain} ]] && domain="${cfg_docfg}"

  [[ ${flag_vildcard} -eq 1 ]] && vildcard="-d *.${domain}"

  if ! grep -qE "127.0.0.1(\s|\t)+${domain}" '/etc/hosts'; then
    echo "Add in hosts file: ${domain}"
    if [[ $(echo "${domain}s" | tr -cd "." | wc -m) -eq 1 ]]; then
      echo -e "127.0.0.1   ${domain}\n::1         ${domain}" | sudo tee -a '/etc/hosts'
    else
      echo -e "127.0.0.1   ${domain} www.${domain}\n::1         ${domain} www.${domain}" | sudo tee -a '/etc/hosts'
    fi
  else
    echo "Already added in hosts file: ${domain}"
  fi

  sudo certbot certonly ${test} --manual --must-staple --manual-public-ip-logging-ok --preferred-challenges dns-01 --renew-by-default --force-renewal --rsa-key-size $letsencrypt_rsa_key_size --agree-tos --eff-email --expand -m "$cfg_email" --server https://acme-v02.api.letsencrypt.org/directory -d "${domain}" ${wildcard}

}

function main_generate_script_source() {

  # prinf "Initialise main function of generate script source\n";

  generate_wildcard_certificate_for_main_domain "$@"

}

main_generate_script_source "$@"
