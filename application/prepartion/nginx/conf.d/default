#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: default
## @Creation date file: 24.09.2020, 02:01:59

declare -rx conf_d_default_d_default_script_source="$BASH_SOURCE"

temp_one="$(dirname ${conf_d_default_d_default_script_source})"
if [[ "${temp_one}" == '.' ]]; then
  declare -rx conf_d_default_d_default_script_source_path="$(pwd)"
else
  declare -rx conf_d_default_d_default_script_source_path="${temp_one}"
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${conf_d_default_d_default_script_source})"

function main_conf_d_default_d_default_script_source() {

  # prinf "Initialise main function of default script source\n";

  [[ -z "${nginx_script_source_path}" ]] && local nginx_script_source_path='.'
  [[ -z "$rev_timestamp" ]] && local rev_timestamp="$(cat ${nginx_script_source_path}/rev-timestamp.txt)"
  [[ $(systemctl is-active nginx) == 'active' ]] && sudo systemctl stop nginx

  cat <<EOF | sudo tee /etc/nginx/conf.d/default.conf >/dev/null
gzip on;
gzip_disable "msie6";
gzip_comp_level 2;
gzip_vary on;
gzip_min_length 256;
gzip_proxied expired no-cache no-store private auth;
#gzip_buffers 16 8k;
gzip_types application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon text/css text/plain text/x-component;


server_names_hash_bucket_size 64;

server_tokens off; # removed pound sign

map \$remote_addr \$hack_name_server {
  '127.0.0.1' 'DEV - ${cfg_org} - 23.06.06 - rev: $rev_timestamp';
  '::1'       'DEV - ${cfg_org} - 23.06.06 - rev: $rev_timestamp';
  default     '${cfg_org} - 23.06.06 - rev: $rev_timestamp';
}

more_set_headers 'Server: \$hack_name_server';

sub_filter_last_modified on;
sub_filter_once off;
subs_filter_types text/css text/xml application/javascript application/x-javascript application/json;
# subs_filter '<center>nginx/1.18.0</center>' '<center>\$hack_name_server</center>' gior;
subs_filter 'nginx' '\$hack_name_server' gior;
EOF

  [[ $(systemctl is-active nginx) == 'active' ]] || sudo systemctl start nginx

}

main_conf_d_default_d_default_script_source "$@"
