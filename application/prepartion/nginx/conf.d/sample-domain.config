server {
    listen       80;
    listen       [::]:80;
    server_name  4.home.sensor-dream.ru;
    root         /mnt/sda/Development/www_share/ru/sensor-dream/4.home/www;
    access_log  /mnt/sda/Development/www_share/ru/sensor-dream/4.home/logs/nginx/access.log;
    error_log  /mnt/sda/Development/www_share/ru/sensor-dream/4.home/logs/nginx/error.log;

    location ~ ^/\.well-known/acme-challenge/([-_a-zA-Z0-9]+)$ {
        default_type text/plain;
        return 200 "$1.##ACME_THUMBPRINT##";
    }

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


}

server {

    listen       443 ssl http2 accept_filter=dataready;
    listen       [::]:443 ssl http2 accept_filter=dataready;
    server_name  4.home.sensor-dream.ru;
    root         /mnt/sda/Development/www_share/ru/sensor-dream/4.home/www;

    index index.php index.html;

    # [ debug | info | notice | warn | error | crit ]
    access_log  /mnt/sda/Development/www_share/ru/sensor-dream/4.home/logs/nginx/access.log;
    error_log  /mnt/sda/Development/www_share/ru/sensor-dream/4.home/logs/nginx/error.log debug;

    # signed cert plus intermediates
    ssl_certificate "/etc/letsencrypt/live/home.sensor-dream.ru/fullchain.pem";
    # private key
    ssl_certificate_key "/etc/letsencrypt/live/home.sensor-dream.ru/privkey.pem";
    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate "/etc/letsencrypt/live/home.sensor-dream.ru/chain.pem";

    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt { access_log off; log_not_found off; }
    location = /sitemap.xml { access_log off; log_not_found off; }

    # redirect server error pages to the static page /40x.html
    #
    error_page  404  /404.html;
    location = /40x.html {
      root  /usr/share/nginx/html;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root  /usr/share/nginx/html;
    }

    location ~ /cockpit {
        proxy_pass https://127.0.0.1:9090/$query_string;
        proxy_redirect http://127.0.0.1:9090/ /$query_string;

        proxy_next_upstream error timeout http_502 http_503 http_504;
        # proxy_next_upstream error timeout http_404;

        proxy_http_version 1.1;

        proxy_intercept_errors on;
        proxy_read_timeout 60s;

        proxy_set_header Host $http_host;

        # allow websockets
        proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection $connection_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP

        proxy_set_header X-Forwarded-Proto $scheme;

#
        #   Sample set headers
        #

        proxy_set_header Content-Type $content_type;
        proxy_set_header Accept-Encoding "";

        proxy_set_header X-Forwarded-Real-Server-Name Nginx;
        proxy_set_header X-Forwarded-Real-Server-Version $nginx_version;
        proxy_set_header X-Forwarded-Hack-Server-Name $hack_name_server;
        proxy_set_header X-Forwarded-Server-Protocol $server_protocol;
        proxy_set_header X-Forwarded-Request-Method $request_method;
        proxy_set_header X-Forwarded-Request-Uri $request_uri;
        proxy_set_header X-Forwarded-Uri $uri;
        proxy_set_header X-Forwarded-Query-String $uri?$args;
        #первоначальная строка запроса целиком
        proxy_set_header X-Forwarded-Request $request;
        proxy_set_header X-Forwarded-RequestB $request_body;
        # proxy_cookie_domain sensor-dream.ru;
        # proxy_cookie_path / /;

    }

    location ~ / {
	    error timeout http_502 http_503 http_504;
    }

}

