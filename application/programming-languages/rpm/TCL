#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: TCL
## @Creation date file: 13.11.2020, 01:36:26

[[ -z "${TCL_script_source}" ]] && declare -rx TCL_script_source="$BASH_SOURCE"

if [[ -z "${TCL_script_source_path}" ]]; then
  temp_one="$(dirname ${TCL_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx TCL_script_source_path="$(pwd)"
  else
    declare -rx TCL_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function install_TCL() {

  local install_pkg=(
    # Краткое опис : Tool Command Language, pronounced tickle
    # URL          : http://tcl.sourceforge.net/
    # Лицензия     : TCL
    # Описание     : The Tcl (Tool Command Language) provides a powerful platform for
    # : creating integration applications that tie together diverse
    # : applications, protocols, devices, and frameworks. When paired with the
    # : Tk toolkit, Tcl provides a fastest and powerful way to create
    # : cross-platform GUI applications.  Tcl can also be used for a variety
    # : of web-related tasks and for creating powerful command languages for
    # : applications.
    'tcl'
    'tcl-brlapi'
    'tcl-devel'
    'tcl-doc'
    'tcl-hamlib'
    'tcl-html'
    'tcl-iaxclient'
    'tcl-ming'
    'tcl-mysqltcl'
    'tcl-pgplot'
    'tcl-pgplot-devel'
    'tcl-pgtcl'
    'tcl-signal'
    'tcl-snack'
    'tcl-snack-devel'
    'tcl-tclnagios'
    'tcl-tclreadline'
    'tcl-tclreadline-devel'
    'tcl-tcludp'
    'tcl-tclvfs'
    'tcl-tclxml'
    'tcl-tclxml-devel'
    'tcl-tclxml-gui'
    'tcl-thread'
    'tcl-thread-devel'
    'tcl-tileqt'
    'tcl-tkpng'
    'tcl-tktreectrl'
    'tcl-togl'
    'tcl-togl-devel'
    'tcl-trf'
    'tcl-trf-devel'
    'tcl-xapian'
    'tcl-zlib'
    'tcl-zlib-devel'
    'tclap'
    'tclap-doc'
    'tcllib'
    'tclspice'
    'tcltls'
    'tcltls-devel'
    'tclx'
    'tclx-devel'
  )

  [[ -d "${main_project_path}/package-list" ]] || mkdir -p "${main_project_path}/package-list"
  printf '%s\n' $(unset_dupes_in_array "${install_pkg[@]}") | sort >"${main_project_path}/package-list/TCL.txt"
  pm "$@" -- "${install_pkg[@]}"

}

function main_TCL_script_source() {

  # printf "Initialise main function of TCL script source\n";

  install_TCL "$@"

}

main_TCL_script_source "$@"
