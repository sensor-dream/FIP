#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: disable-packagekit-update
## @Creation date file: 18.11.2020, 00:54:13

[[ -z "${disable_packagekit_update_script_source}" ]] && declare -rx disable_packagekit_update_script_source="$BASH_SOURCE"

if [[ -z "${disable_packagekit_update_script_source_path}" ]]; then
  temp_one="$(dirname ${disable_packagekit_update_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx disable_packagekit_update_script_source_path="$(pwd)"
  else
    declare -rx disable_packagekit_update_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function install_disable_packagekit_update() {

  local flag=0

  OPTIND=1

  while getopts "er" OPT; do
    case $OPT in
    e) flag=1 ;;
    r) flag=2 ;;
    *) ;;
    esac
  done

  shift $(($OPTIND - 1))
  [ "${1:-}" = "--" ] && shif

  if [[ ${flag} -eq 1 ]]; then
    sudo dnf install gnome-software simple-scan appstream-data PackageKit PackageKit-Qt5 PackageKit-Qt5-devel PackageKit-command-not-found PackageKit-cron PackageKit-glib-devel PackageKit-glib PackageKit-gstreamer-plugin PackageKit-gtk3-module
    # sudo dnf install gnome-packagekit
    # sudo systemctl unmask packagekit
    # sudo systemctl enable packagekit
    # sudo systemctl start packagekit
  else
    sudo systemctl stop packagekit
    sudo systemctl disable packagekit
    # sudo systemctl mask packagekit
    if [[ ${flag} -eq 2 ]]; then
      sudo dnf remove PackageKit\*
    else
      [[ "$(gsettings get org.gnome.software download-updates)" == 'true' ]] && gsettings set org.gnome.software download-updates false
    fi
  fi

}

function main_disable_packagekit_update_script_source() {

  # printf "Initialise main function of disable-packagekit-update script source\n";

  install_disable_packagekit_update "$@"

}

main_disable_packagekit_update_script_source "$@"
