#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: sysctl-conf
## @Creation date file: 23.10.2020, 18:18:28

[[ -z "${sysctl_conf_script_source}" ]] && declare -rx sysctl_conf_script_source="$BASH_SOURCE"

if [[ -z "${sysctl_conf_script_source_path}" ]]; then
  temp_one="$(dirname ${sysctl_conf_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx sysctl_conf_script_source_path="$(pwd)"
  else
    declare -rx sysctl_conf_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function preparate_sysctl_conf() {

  local net_ipv4_neigh_default_gc_thresh1=1024
  local net_ipv4_neigh_default_gc_thresh2=2048
  local net_ipv4_neigh_default_gc_thresh3=4096
  local kernel_sysrq=1
  local vm_admin_reserve_kbytes=60192

  # gc_thresh1 — the minimum number of entries that should be in the ARP cache.
  # If the number of entries is less than this value, the garbage collector will not clear the ARP cache.
  # (def. 128)
  # sudo sysctl -w net.ipv4.neigh.default.gc_thresh1=1024
  if ! grep -q "net.ipv4.neigh.default.gc_thresh1" '/etc/sysctl.conf'; then
    echo "net.ipv4.neigh.default.gc_thresh1 = ${net_ipv4_neigh_default_gc_thresh1}" | sudo tee -a '/etc/sysctl.conf' >/dev/null
  else
    sudo sed -i 's/net.ipv4.neigh.default.gc_thresh1.*$/net.ipv4.neigh.default.gc_thresh1 = '"${net_ipv4_neigh_default_gc_thresh1}"'/' '/etc/sysctl.conf'
  fi

  # gc_thresh2 - soft limit on the number of entries in the ARP cache.
  # If the number of entries reaches this value, the garbage collector starts within 5 seconds.
  # (def. 512)
  # sudo sysctl -w net.ipv4.neigh.default.gc_thresh2=2048
  if ! grep -q "net.ipv4.neigh.default.gc_thresh2" '/etc/sysctl.conf'; then
    echo "net.ipv4.neigh.default.gc_thresh2 = ${net_ipv4_neigh_default_gc_thresh2}" | sudo tee -a '/etc/sysctl.conf' >/dev/null
  else
    sudo sed -i 's/net.ipv4.neigh.default.gc_thresh2.*$/net.ipv4.neigh.default.gc_thresh2 = '"${net_ipv4_neigh_default_gc_thresh2}"'/' '/etc/sysctl.conf'
  fi

  # gc_thresh3 - hard limit on the number of entries in the ARP cache.
  # If the number of records reaches this value, the garbage collector starts immediately.
  # (def. 1024)
  # sudo sysctl -w net.ipv4.neigh.default.gc_thresh3=4096
  if ! grep -q "net.ipv4.neigh.default.gc_thresh3" '/etc/sysctl.conf'; then
    echo "net.ipv4.neigh.default.gc_thresh3 = ${net_ipv4_neigh_default_gc_thresh3}" | sudo tee -a '/etc/sysctl.conf' >/dev/null
  else
    sudo sed -i 's/net.ipv4.neigh.default.gc_thresh3.*$/net.ipv4.neigh.default.gc_thresh3 = '"${net_ipv4_neigh_default_gc_thresh3}"'/' '/etc/sysctl.conf'
  fi

  # включить все комбинации Alt+SysRq, в т.ч. Alt+SysRq+F для принудительного вызова OOM Killer
  # sudo sysctl -w kernel.sysrq = 1
  if ! grep -q "kernel.sysrq" '/etc/sysctl.conf'; then
    echo "kernel.sysrq = ${kernel_sysrq}" | sudo tee -a '/etc/sysctl.conf' >/dev/null
  else
    sudo sed -i 's/kernel.sysrq.*$/kernel.sysrq = '"${kernel_sysrq}"'/' '/etc/sysctl.conf'
  fi

  # с 8 МБ увеличим размер памяти, который будет гарантированно не занят в системе, чтобы у нас могли работать SSH и пр.
  # sudo sysctl -w vm.admin_reserve_kbytes = 60192
  if ! grep -q "vm.admin_reserve_kbytes" '/etc/sysctl.conf'; then
    echo "vm.admin_reserve_kbytes = ${vm_admin_reserve_kbytes}" | sudo tee -a '/etc/sysctl.conf' >/dev/null
  else
    sudo sed -i 's/vm.admin_reserve_kbytes.*$/vm.admin_reserve_kbytes = '"${vm_admin_reserve_kbytes}"'/' '/etc/sysctl.conf'
  fi

  # Return the values of variables to the state saved in files and delete your changes.
  # sudo sysctl --system

  # read values from file
  sudo sysctl -p

}

function main_sysctl_conf_script_source() {

  # printf "Initialise main function of sysctl-conf script source\n";

  preparate_sysctl_conf "$@"

}

main_sysctl_conf_script_source "$@"
