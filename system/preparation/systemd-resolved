#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: systemd-resolved
## @Creation date file: 07.12.2020, 18:30:50

[[ -z "${systemd_resolved_script_source}" ]] && declare -rx systemd_resolved_script_source="$BASH_SOURCE"

if [[ -z "${systemd_resolved_script_source_path}" ]]; then
  temp_one="$(dirname ${systemd_resolved_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx systemd_resolved_script_source_path="$(pwd)"
  else
    declare -rx systemd_resolved_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function install_systemd_resolved() {

  local install_pkg=(
    'systemd-resolved'
  )

  printf '%s\n' $(unset_dupes_in_array "${install_pkg[@]}") | sort >"${main_project_path}/package-list/systemd-resolved.txt"
  pm "$@" -- "${install_pkg[@]}"

}

function main_systemd_resolved_script_source() {

  # printf "Initialise main function of systemd-resolved script source\n";

  [[ -z "${cfg_local_ip}" ]] && . "${main_project_path}/tools/cfg-network-information"

  if [[ -n "$@" && "$1" == "disable" ]]; then
    [[ "$(systemctl is-active systemd-resolved)" == 'active' ]] && sudo systemctl stop systemd-resolved
    [[ "$(systemctl is-enabled systemd-resolved)" == 'enabled' ]] && sudo systemctl disable systemd-resolved
  else

    [[ -f "/etc/systemd/resolved.conf" ]] || sudo touch "/etc/systemd/resolved.conf"
    [[ -f "/etc/systemd/resolved.conf.back" ]] || sudo cp "/etc/systemd/resolved.conf" "/etc/systemd/resolved.conf.back"

    temp_one="$(cat /etc/systemd/resolved.conf)"

    insert_or_replace_substring_in_string_data '^(#)?DNS=(.*)?$' "DNS=${cfg_ip_dns_1} ${cfg_ip_dns_2} ${cfg_ip_dns_3} ${cfg_ip_dns_4} ${cfg_ipv6_dns_1} ${cfg_ipv6_dns_2} ${cfg_ipv6_dns_3} ${cfg_ipv6_dns_4}"

    # default:
    #   #FallbackDNS=1.1.1.1 8.8.8.8 1.0.0.1 8.8.4.4 2606:4700:4700::1111 2001:4860:4860::8888 2606:4700:4700::1001 2001:4860:4860::8844
    insert_or_replace_substring_in_string_data '^(#)?FallbackDNS=(.*)?$' "FallbackDNS=${cfg_ip_dns_5} ${cfg_ip_dns_6} ${cfg_ip_dns_7} ${cfg_ip_dns_8} ${cfg_ipv6_dns_5} ${cfg_ipv6_dns_6} ${cfg_ipv6_dns_7} ${cfg_ipv6_dns_8}"

    insert_or_replace_substring_in_string_data '^(#)?Domains=(.*)?$' "Domains=${cfg_local_group_docfg}"

    insert_or_replace_substring_in_string_data '^(#)?DNSSEC=(.*)?$' "DNSSEC=allow-downgrade"
    insert_or_replace_substring_in_string_data '^(#)?DNSOverTLS=(.*)?$' "DNSOverTLS=opportunistic"

    echo "${temp_one}" | sudo tee "/etc/systemd/resolved.conf" >/dev/null

    [[ "$(systemctl is-enabled systemd-resolved)" == 'enabled' ]] || sudo systemctl enable systemd-resolved
    if [[ "$(systemctl is-active systemd-resolved)" == 'active' ]]; then
      sudo systemctl restart systemd-resolved
    else
      sudo systemctl start systemd-resolved
    fi

    printf '\n%s\n' 'Please read https://developer.gnome.org/NetworkManager/stable/'

    nmcli device disconnect "${cfg_local_interface_name}"
    nmcli c mod "${cfg_local_connection_name}" ipv4.ignore-auto-dns no ipv4.dns '127.0.0.53'
    nmcli device connect "${cfg_local_interface_name}"
  fi

}

main_systemd_resolved_script_source "$@"
